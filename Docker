Docker

#!/usr/bin/bash


## Suppression de la précédente version de Docker
sudo apt remove docker docker-engine docker.io containerd runc


## Mise en place du dépôt Docker
sudo apt install ca-certificates curl gnupg lsb-release
sudo mkdir -m 0755 -p /etc/apt/keyrings
curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg

echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/debian \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

## Installation de docker
sudo apt update
sudo apt install docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin

# curl -fsSL https://get.docker.com -o get-docker.sh

## Premier pas 

docker ps
docker run nginx:latest
Ctrl+C

docker ps -a
docker run -d nginx:latest

sudo usermod -aG docker $USER

#Lancement de conteneur
docker run -d --name c1
docker run -d --name c1 -p 8080:80 
docker run -ti debian:latest
docker run -ti --hostname c1 debian:latest
docker run -ti --rm --hostname c1 debian:latest

docker stop c1
docker start c1

supprimer un conteneur
docker rm -f c1

Supprimer tous les conteneurs
docker rm -f $(docker ps -aq)



Volume
docker volume ls

docker volume create mynginx
docker run -d --name c1 -v mynginx:/usr/share/nginx/html nginx:latest
docker exec -ti c1 bash


docker volume inspect mynginx

sudo ls /var/lib/docker/volumes/mynginx/_data/

docker run -ti --name c2 --rm -v mynginx:/data debian:latest bash

Effacer volume
docker volume rm mynginx

Types de volumes 
sudo mkdir /data
sudo mkdir /data2
sudo touch /data/toto

sudo findmnt
Monter le répertoire data2 comme source data
sudo mount --bind /data/ /data2/

ls /data2/
sudo umount /data2
sudo rm -rf /data2


docker run -d --name c1 --mount type=bind,source=/data/,destination=/usr/share/nginx/html nginx:latest

docker exec -ti c1 bash
 ls /usr/share/nginx/html
 
 docker inspect c1
 pour voir les mounts
 
 docker inspect --format "{{.Mounts}}" c1
[{bind  /data /usr/share/nginx/html   true rprivate}]

Volume conteneur priorisé
docker volume create mynginx
docker run -d --name c2 --mount type=volume,src=mynginx,destination=/usr/share/nginx/html nginx:latest


tmpfs
Données temporaire
docker run -d --hostname --mount type=tmpfs,destination=/usr/share/nginx/html/ --name c1 debian:latest



docker run --network=my_lanhome -d nginx:latest


docker inspect <conteneur_id_ou_nom> | grep IPAddress
docker network create -d macvlan --subnet=192.168.0.0/24 --gateway=192.168.0.254 --ip-range 192.168.0.128/28 -o parent=ens33 my_lanhome

docker run -d --name ansible:latest

docker network connect <nom_du_réseau> <nom_du_conteneur>

sudo curl -L "https://github.com/docker/compose/releases/download/v2.24.5/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
sudo chmod +x /usr/local/bin/docker-compose

docker-compose up -d
docker-compose down
docker-compose down -v


docker images
docker rmi
docker system prune
